@model FootballLeague.Data.Entities.Round

@{
    ViewData["Title"] = "Close Round";
}

<div class="shadow-none p-3 mb-5 bg-body-tertiary rounded bg-white">
    <h3>Close Round</h3>
    <hr />
    <div class="row">
        <div class="col-md-4">
            <form asp-action="CloseRound">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <input type="hidden" asp-for="Id" />
                <div class="form-group">
                    <label asp-for="Name" class="control-label"></label>
                    <input asp-for="Name" class="form-control" readonly/>
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="DateStart" class="control-label"></label>
                    <input asp-for="DateStart" id="DateStart" class="form-control" type="datetime-local" readonly />
                    <span asp-validation-for="DateStart" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="DateEnd" class="control-label"></label>
                    <input asp-for="DateEnd" id="DateEnd" class="form-control" type="datetime-local"  placeholder="Select date..."/>
                    <span asp-validation-for="DateEnd" class="text-danger"></span>
                </div>
                <div class="form-group form-check">
                    <label class="form-check-label">
                        <input class="form-check-input" asp-for="IsClosed" /> @Html.DisplayNameFor(model => model.IsClosed)
                    </label>
                </div>

                <div class="form-group">
                    <button type="submit" class="btn btn-primary"><i class="fas fa-save"></i> Save</button>
                    <a asp-action="Index" asp-controller="Dashboard" class="btn btn-success"><i class="fas fa-chevron-left"></i> Back to List</a>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        let flatpickrInstance;
      

        document.addEventListener("DOMContentLoaded", function () {

            flatpickr("#DateStart", {
                enableTime: true,
                // minDate: "today",
                dateFormat: "Y-m-d H:i",
                defaultDate: "@Model.DateStart.ToString("yyyy-MM-dd HH:mm")",
            });
            flatpickrInstance = flatpickr("#DateEnd", {
                enableTime: true,
                minDate: "@Model.DateStart.ToString("yyyy-MM-dd HH:mm")",
                dateFormat: "Y-m-d H:i",
                 // defaultDate: "@Model.DateStart.ToString("yyyy-MM-dd HH:mm")",
            });

            document.querySelector('[name="RoundId"]').addEventListener('change', function () {
                const roundId = this.value;

                fetch(`/Matches/GetRoundStartDate?roundId=${roundId}`)
                    .then(response => response.json())
                    .then(data => {
                        flatpickrInstance.set("minDate", data.startDate);
                    })
                    .catch(error => console.log('Erro ao buscar a data de início da rodada:', error));
            });
        });
    </script>
}



